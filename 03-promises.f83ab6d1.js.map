{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAIA,MAAMC,EAAOC,SAASC,cAAc,SACpC,IAAIC,EACAC,EACAC,EAwBJ,SAASC,EAAcC,EAAUC,GAY/B,OAXgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACaC,KAAKC,SAAW,GAGpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAhCbR,EAAKe,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAMNC,MAAMC,KAAKnB,EAAKoB,UAAUC,SAAQC,IAChB,UAAZA,EAAGC,OACLpB,EAAaqB,SAASF,EAAGG,QAEX,SAAZH,EAAGC,OACLnB,EAAYoB,SAASF,EAAGG,QAEV,WAAZH,EAAGC,OACLlB,EAAcmB,SAASF,EAAGG,OAAM,IAoBtC,WACE,IAAIC,EACAC,EACJ,IAAKD,EAAI,EAAGA,EAAIrB,EAAaqB,IAAK,CAEhCC,EAAQxB,EAAaC,EAAYsB,EACjCpB,EAFeoB,EAAI,EAEKC,GACrBC,MAAK,EAACrB,SAAEA,EAAQC,MAAEA,MACjBqB,EAAA/B,GAASgC,OAAOC,QACd,uBAAqBxB,QAAiBC,MAAU,IAGnDwB,OAAM,EAACzB,SAAEA,EAAQC,MAAEA,MAClBqB,EAAA/B,GAASgC,OAAOG,QACd,sBAAoB1B,QAAeC,MAAU,G,EA9CrD0B,E","sources":["src/js/03-promises.js"],"sourcesContent":["'use strict';\n\nimport Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nlet delayValue;\nlet stepValue;\nlet amountValue;\n\nform.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  formData();\n  generatePromise();\n}\n\nfunction formData() {\n  Array.from(form.elements).forEach(el => {\n    if (el.name === 'delay') {\n      delayValue = parseInt(el.value);\n    }\n    if (el.name === 'step') {\n      stepValue = parseInt(el.value);\n    }\n    if (el.name === 'amount') {\n      amountValue = parseInt(el.value);\n    }\n  });\n}\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\n\nfunction generatePromise() {\n  let i;\n  let delay;\n  for (i = 0; i < amountValue; i++) {\n    let position = i + 1;\n    delay = delayValue + stepValue * i;\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$delayValue","$47d4ff9957288465$var$stepValue","$47d4ff9957288465$var$amountValue","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","Array","from","elements","forEach","el","name","parseInt","value","i","delay1","then","$parcel$interopDefault","Notify","success","catch","failure","$47d4ff9957288465$var$generatePromise"],"version":3,"file":"03-promises.f83ab6d1.js.map"}