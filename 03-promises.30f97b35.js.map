{"mappings":"iiBAAA,IAKIA,EACAC,EACAC,EAPJC,EAAAC,EAAA,SAIMC,EAAOC,SAASC,cAAc,SA2BpC,SAASC,EAAcC,EAAUC,GAC/BC,YAAW,WACaC,KAAKC,SAAW,GAEpCC,EAAAX,GAASY,OAAOC,QAAQ,uBAAwCC,OAAfR,EAAS,QAAYQ,OAANP,EAAM,OAEtEI,EAAAX,GAASY,OAAOG,QAAQ,sBAAqCD,OAAfR,EAAS,QAAYQ,OAANP,EAAM,M,GAEpEA,E,CA9BLL,EAAKc,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAMNC,MAAMC,KAAKlB,EAAKmB,UAAUC,SAAQ,SAAAC,GAChB,UAAZA,EAAGC,OACL3B,EAAa4B,SAASF,EAAGG,QAEX,SAAZH,EAAGC,OACL1B,EAAY2B,SAASF,EAAGG,QAEV,WAAZH,EAAGC,OACLzB,EAAc0B,SAASF,EAAGG,O,IAgBhC,WACE,IAAIC,EAEJ,IAAKA,EAAI,EAAGA,EAAI5B,EAAa4B,IAAK,CAGhCtB,EAFesB,EAAI,EACX9B,EAAaC,EAAY6B,E,EAjCnCC,E","sources":["src/js/03-promises.js"],"sourcesContent":["'use strict';\n\nimport Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nlet delayValue;\nlet stepValue;\nlet amountValue;\n\nform.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  formData();\n  generatePromise();\n}\n\nfunction formData() {\n  Array.from(form.elements).forEach(el => {\n    if (el.name === 'delay') {\n      delayValue = parseInt(el.value);\n    }\n    if (el.name === 'step') {\n      stepValue = parseInt(el.value);\n    }\n    if (el.name === 'amount') {\n      amountValue = parseInt(el.value);\n    }\n  });\n}\n\nfunction createPromise(position, delay) {\n  setTimeout(() => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    } else {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    }\n  }, delay);\n}\n\nfunction generatePromise() {\n  let i;\n  let delay;\n  for (i = 0; i < amountValue; i++) {\n    let position = i + 1;\n    delay = delayValue + stepValue * i;\n    createPromise(position, delay);\n  }\n}\n"],"names":["$ce04d3a99e08e73b$var$delayValue","$ce04d3a99e08e73b$var$stepValue","$ce04d3a99e08e73b$var$amountValue","$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","setTimeout","Math","random","$parcel$interopDefault","Notify","success","concat","failure","addEventListener","event","preventDefault","Array","from","elements","forEach","el","name","parseInt","value","i","$ce04d3a99e08e73b$var$generatePromise"],"version":3,"file":"03-promises.30f97b35.js.map"}