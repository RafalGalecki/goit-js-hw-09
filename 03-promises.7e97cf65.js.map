{"mappings":"iiBAAA,IAKIA,EACAC,EACAC,EAPJC,EAAAC,EAAA,SAIMC,EAAOC,SAASC,cAAc,SA2BpC,SAASC,EAAcC,EAAUC,GAY/B,OAXgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACaC,KAAKC,SAAW,GAGpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAhCPL,EAAKY,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAMNC,MAAMC,KAAKhB,EAAKiB,UAAUC,SAAQ,SAAAC,GAChB,UAAZA,EAAGC,OACLzB,EAAa0B,SAASF,EAAGG,QAEX,SAAZH,EAAGC,OACLxB,EAAYyB,SAASF,EAAGG,QAEV,WAAZH,EAAGC,OACLvB,EAAcwB,SAASF,EAAGG,O,IAoBhC,WACE,IAAIC,EAEJ,IAAKA,EAAI,EAAGA,EAAI1B,EAAa0B,IAAK,CAGhCpB,EAFeoB,EAAI,EACX5B,EAAaC,EAAY2B,GAE9BC,MAAK,SAAAC,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MACjBqB,EAAA5B,GAAS6B,OAAOC,QACd,uBAAwCC,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M,IAGjDyB,OAAM,SAAAL,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MAClBqB,EAAA5B,GAAS6B,OAAOI,QACd,sBAAqCF,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M,KA9CnD2B,E","sources":["src/js/03-promises.js"],"sourcesContent":["'use strict';\n\nimport Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nlet delayValue;\nlet stepValue;\nlet amountValue;\n\nform.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  formData();\n  generatePromise();\n}\n\nfunction formData() {\n  Array.from(form.elements).forEach(el => {\n    if (el.name === 'delay') {\n      delayValue = parseInt(el.value);\n    }\n    if (el.name === 'step') {\n      stepValue = parseInt(el.value);\n    }\n    if (el.name === 'amount') {\n      amountValue = parseInt(el.value);\n    }\n  });\n}\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\n\nfunction generatePromise() {\n  let i;\n  let delay;\n  for (i = 0; i < amountValue; i++) {\n    let position = i + 1;\n    delay = delayValue + stepValue * i;\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n"],"names":["$ce04d3a99e08e73b$var$delayValue","$ce04d3a99e08e73b$var$stepValue","$ce04d3a99e08e73b$var$amountValue","$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","Array","from","elements","forEach","el","name","parseInt","value","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","$ce04d3a99e08e73b$var$generatePromise"],"version":3,"file":"03-promises.7e97cf65.js.map"}